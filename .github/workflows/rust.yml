name: Build and Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag'
        required: true
        default: 'v1.0.0'

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: convertix-linux-amd64
            zip_name: convertix-linux-amd64.zip
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: convertix-linux-arm64
            zip_name: convertix-linux-arm64.zip
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: convertix-windows-amd64.exe
            zip_name: convertix-windows-amd64.zip
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: convertix-macos-amd64
            zip_name: convertix-macos-amd64.zip
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: convertix-macos-arm64
            zip_name: convertix-macos-arm64.zip

    steps:
    - uses: actions/checkout@v3
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    
    - name: Build for ${{ matrix.target }}
      run: cargo build --release --target ${{ matrix.target }}
    
    - name: Prepare artifacts
      run: |
        mkdir artifacts
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          cp target/${{ matrix.target }}/release/${{ matrix.artifact_name }} artifacts/
        else
          cp target/${{ matrix.target }}/release/convertix artifacts/${{ matrix.artifact_name }}
        fi
        cp config.json artifacts/
      shell: bash
    
    - name: Create zip archive
      run: |
        cd artifacts
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          7z a ../${{ matrix.zip_name }} *
        else
          zip -r ../${{ matrix.zip_name }} *
        fi
      shell: bash
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: ConvertiX Release v${{ github.run_number }}
        draft: false
        prerelease: false
    
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ matrix.zip_name }}
        asset_name: ${{ matrix.zip_name }}
        asset_content_type: application/zip
